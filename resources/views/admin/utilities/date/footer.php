<?php
/*
 * @ https://EasyToYou.eu - IonCube v10 Decoder Online
 * @ PHP 5.6
 * @ Decoder version: 1.0.4
 * @ Release: 02/06/2020
 *
 * @ ZendGuard Decoder PHP 5.6
 */

$today = WHMCS\Carbon::today()->startOfDay();
$adminJsVars = "";
$key = "DatePickerVars_" . AdminLang::getName();
$cached = WHMCS\TransientData::getInstance()->retrieve($key);
if ($cached) {
    $decoded = json_decode($cached, true);
    if (!empty($decoded) && is_array($decoded)) {
        $cachedDay = (new WHMCS\Carbon($decoded["today"]))->startOfDay();
        if ($today->isSameDay($cachedDay)) {
            $adminJsVars = $cached;
        }
    }
}
if (!$adminJsVars) {
    $adminJsVars = array("today" => $today->toDateString(), "minYear" => 2000, "maxYear" => (int) (ceil($today->copy()->addYears(30)->format("Y") / 10) * 10), "dateRangeFormat" => WHMCS\Config\Setting::getValue("DateFormat"), "dateTimeRangeFormat" => WHMCS\Config\Setting::getValue("DateFormat") . " HH:mm", "dateRangePicker" => array("months" => array(addslashes(AdminLang::trans("months.january")), addslashes(AdminLang::trans("months.february")), addslashes(AdminLang::trans("months.march")), addslashes(AdminLang::trans("months.april")), addslashes(AdminLang::trans("months.may")), addslashes(AdminLang::trans("months.june")), addslashes(AdminLang::trans("months.july")), addslashes(AdminLang::trans("months.august")), addslashes(AdminLang::trans("months.september")), addslashes(AdminLang::trans("months.october")), addslashes(AdminLang::trans("months.november")), addslashes(AdminLang::trans("months.december"))), "daysOfWeek" => array(addslashes(AdminLang::trans("days.su")), addslashes(AdminLang::trans("days.mo")), addslashes(AdminLang::trans("days.tu")), addslashes(AdminLang::trans("days.we")), addslashes(AdminLang::trans("days.th")), addslashes(AdminLang::trans("days.fr")), addslashes(AdminLang::trans("days.sa"))), "cancelLabel" => addslashes(AdminLang::trans("global.clear")), "applyLabel" => addslashes(AdminLang::trans("global.apply")), "customRangeLabel" => addslashes(AdminLang::trans("global.custom")), "defaultRanges" => array(addslashes(AdminLang::trans("calendar.today")) => array($today->toAdminDateTimeFormat(), $today->toAdminDateTimeFormat()), addslashes(AdminLang::trans("calendar.yest")) => array($today->copy()->subDay()->toAdminDateTimeFormat(), $today->copy()->subDay()->toAdminDateTimeFormat()), addslashes(AdminLang::trans("calendar.lastDays", array(":days" => 7))) => array($today->copy()->subDays(6)->toAdminDateTimeFormat(), $today->toAdminDateTimeFormat()), addslashes(AdminLang::trans("calendar.lastDays", array(":days" => 30))) => array($today->copy()->subDays(29)->toAdminDateTimeFormat(), $today->toAdminDateTimeFormat()), addslashes(AdminLang::trans("calendar.thisMonth")) => array($today->copy()->startOfMonth()->toAdminDateTimeFormat(), $today->copy()->endOfMonth()->toAdminDateTimeFormat()), addslashes(AdminLang::trans("calendar.oneMonthAgo")) => array($today->copy()->subMonth()->startOfMonth()->toAdminDateTimeFormat(), $today->copy()->subMonth()->endOfMonth()->toAdminDateTimeFormat()), addslashes(AdminLang::trans("calendar.thisYear")) => array($today->copy()->startOfYear()->toAdminDateTimeFormat(), $today->copy()->endOfYear()->toAdminDateTimeFormat()), addslashes(AdminLang::trans("calendar.oneYearAgo")) => array($today->copy()->subYear()->startOfYear()->toAdminDateTimeFormat(), $today->copy()->subYear()->endOfYear()->toAdminDateTimeFormat())), "futureRanges" => array(addslashes(AdminLang::trans("calendar.today")) => array($today->toAdminDateTimeFormat(), $today->toAdminDateTimeFormat()), addslashes(AdminLang::trans("calendar.tomorrow")) => array($today->copy()->addDay()->toAdminDateTimeFormat(), $today->copy()->addDay()->toAdminDateTimeFormat()), addslashes(AdminLang::trans("calendar.nextDays", array(":days" => 7))) => array($today->copy()->addDays(6)->toAdminDateTimeFormat(), $today->copy()->toAdminDateTimeFormat()), addslashes(AdminLang::trans("calendar.nextDays", array(":days" => 30))) => array($today->copy()->addDays(29)->toAdminDateTimeFormat(), $today->copy()->toAdminDateTimeFormat()), addslashes(AdminLang::trans("calendar.thisMonth")) => array($today->copy()->startOfMonth()->toAdminDateTimeFormat(), $today->copy()->endOfMonth()->toAdminDateTimeFormat()), addslashes(AdminLang::trans("calendar.oneMonthFromNow")) => array($today->copy()->addMonth()->startOfMonth()->toAdminDateTimeFormat(), $today->copy()->addMonth()->endOfMonth()->toAdminDateTimeFormat()), addslashes(AdminLang::trans("calendar.oneYearFromNow")) => array($today->copy()->startOfYear()->toAdminDateTimeFormat(), $today->copy()->endOfYear()->toAdminDateTimeFormat())), "futureRangesTime" => array(addslashes(AdminLang::trans("calendar.today")) => array($today->startOfDay()->toAdminDateTimeFormat(), $today->endOfDay()->toAdminDateTimeFormat()), addslashes(AdminLang::trans("calendar.tomorrow")) => array($today->copy()->addDay()->startOfDay()->toAdminDateTimeFormat(), $today->copy()->addDay()->endOfDay()->toAdminDateTimeFormat()), addslashes(AdminLang::trans("calendar.nextDays", array(":days" => 7))) => array($today->copy()->addDays(6)->startOfDay()->toAdminDateTimeFormat(), $today->copy()->endOfDay()->toAdminDateTimeFormat()), addslashes(AdminLang::trans("calendar.nextDays", array(":days" => 30))) => array($today->copy()->addDays(29)->startOfDay()->toAdminDateTimeFormat(), $today->copy()->endOfDay()->toAdminDateTimeFormat()), addslashes(AdminLang::trans("calendar.thisMonth")) => array($today->copy()->startOfMonth()->startOfDay()->toAdminDateTimeFormat(), $today->copy()->endOfMonth()->endOfDay()->toAdminDateTimeFormat()), addslashes(AdminLang::trans("calendar.oneMonthFromNow")) => array($today->copy()->addMonth()->startOfMonth()->startOfDay()->toAdminDateTimeFormat(), $today->copy()->addMonth()->endOfMonth()->endOfDay()->toAdminDateTimeFormat()), addslashes(AdminLang::trans("calendar.thisYear")) => array($today->copy()->startOfYear()->startOfDay()->toAdminDateTimeFormat(), $today->copy()->endOfYear()->endOfDay()->toAdminDateTimeFormat())), "defaultSingleRanges" => array(addslashes(AdminLang::trans("calendar.today")) => array($today->toAdminDateTimeFormat(), $today->toAdminDateTimeFormat()), addslashes(AdminLang::trans("calendar.yest")) => array($today->copy()->subDay()->toAdminDateTimeFormat(), $today->copy()->subDay()->toAdminDateTimeFormat()), addslashes(AdminLang::trans("calendar.daysAgo", array(":days" => 7))) => array($today->copy()->subDays(7)->toAdminDateTimeFormat(), $today->copy()->subDays(7)->toAdminDateTimeFormat()), addslashes(AdminLang::trans("calendar.oneMonthAgo")) => array($today->copy()->subMonth()->toAdminDateTimeFormat(), $today->copy()->subMonth()->toAdminDateTimeFormat()), addslashes(AdminLang::trans("calendar.oneYearAgo")) => array($today->copy()->subYear()->toAdminDateTimeFormat(), $today->copy()->subYear()->toAdminDateTimeFormat())), "futureSingleRanges" => array(addslashes(AdminLang::trans("calendar.today")) => array($today->toAdminDateTimeFormat(), $today->toAdminDateTimeFormat()), addslashes(AdminLang::trans("calendar.tomorrow")) => array($today->copy()->addDay()->toAdminDateTimeFormat(), $today->copy()->addDay()->toAdminDateTimeFormat()), addslashes(AdminLang::trans("calendar.inDays", array(":days" => 7))) => array($today->copy()->addDays(7)->toAdminDateTimeFormat(), $today->copy()->addDays(7)->toAdminDateTimeFormat()), addslashes(AdminLang::trans("calendar.oneMonthFromNow")) => array($today->copy()->addMonth()->toAdminDateTimeFormat(), $today->copy()->addMonth()->toAdminDateTimeFormat()), addslashes(AdminLang::trans("calendar.oneYearFromNow")) => array($today->copy()->addYear()->toAdminDateTimeFormat(), $today->copy()->addYear()->toAdminDateTimeFormat())), "futureTimeSingleRanges" => array(addslashes(AdminLang::trans("calendar.today")) => array($today->startOfDay()->toAdminDateTimeFormat(), $today->startOfDay()->toAdminDateTimeFormat()), addslashes(AdminLang::trans("calendar.tomorrow")) => array($today->startOfDay()->copy()->addDay()->toAdminDateTimeFormat(), $today->startOfDay()->copy()->addDay()->toAdminDateTimeFormat()), addslashes(AdminLang::trans("calendar.inDays", array(":days" => 7))) => array($today->startOfDay()->copy()->addDays(7)->toAdminDateTimeFormat(), $today->startOfDay()->copy()->addDays(7)->toAdminDateTimeFormat()), addslashes(AdminLang::trans("calendar.oneMonthFromNow")) => array($today->startOfDay()->copy()->addMonth()->toAdminDateTimeFormat(), $today->startOfDay()->copy()->addMonth()->toAdminDateTimeFormat()), addslashes(AdminLang::trans("calendar.oneYearFromNow")) => array($today->startOfDay()->copy()->addYear()->toAdminDateTimeFormat(), $today->startOfDay()->copy()->addYear()->toAdminDateTimeFormat()))));
    $adminJsVars = json_encode($adminJsVars);
    WHMCS\TransientData::getInstance()->store($key, $adminJsVars, 86401);
}
echo "<script>var adminJsVars = ";
echo $adminJsVars;
echo ";</script>\n";

?>